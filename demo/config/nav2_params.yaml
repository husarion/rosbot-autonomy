---
amcl:
  ros__parameters:
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: base_link
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: map
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 12.0
    laser_min_range: -1.0
    laser_model_type: likelihood_field
    max_beams: 60
    max_particles: 500
    min_particles: 200
    odom_frame_id: odom
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: nav2_amcl::DifferentialMotionModel
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan_filtered
    set_initial_pose: true
    always_reset_initial_pose: true
    initial_pose:
      x: 0.0
      y: 0.0
      yaw: 0.0

bt_navigator:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_link
    odom_topic: odometry/filtered
    bt_loop_duration: 10
    filter_duration: 0.3
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    action_server_result_timeout: 900.0
    navigators: [navigate_to_pose, navigate_through_poses]
    navigate_to_pose:
      plugin: nav2_bt_navigator::NavigateToPoseNavigator
      enable_groot_monitoring: false
      groot_server_port: 1667
    navigate_through_poses:
      plugin: nav2_bt_navigator::NavigateThroughPosesNavigator
      enable_groot_monitoring: false
      groot_server_port: 1669
    bt_search_directories:
      - $(find-pkg-share nav2_bt_navigator)/behavior_trees
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.

    # plugin_lib_names is used to add custom BT plugins to the executor (vector of strings).
    # Built-in plugins are added automatically
    # plugin_lib_names: []

    error_code_names:
      - compute_path_error_code
      - follow_path_error_code

controller_server:
  ros__parameters:
    enable_stamped_cmd_vel: true
    controller_frequency: 5.0
    costmap_update_timeout: 0.30
    min_x_velocity_threshold: 0.01    # Measured
    min_y_velocity_threshold: 0.01    # Measured
    min_theta_velocity_threshold: 0.1 # Measured
    failure_tolerance: 0.3
    progress_checker_plugins: [progress_checker]
    goal_checker_plugins: [goal_checker]
    controller_plugins: [FollowPath]
    use_realtime_priority: false
    odom_topic: odometry/filtered

    # Progress checker parameters
    progress_checker:
      plugin: nav2_controller::SimpleProgressChecker
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    # Goal checker parameters
    goal_checker:
      plugin: nav2_controller::SimpleGoalChecker
      xy_goal_tolerance: 0.15
      yaw_goal_tolerance: 0.25
      stateful: true

    # MPPI controller
    FollowPath:
      plugin: nav2_mppi_controller::MPPIController
      time_steps: 25
      model_dt: 0.2
      batch_size: 500
      ax_max: 3.0
      ax_min: -3.0
      ay_max: 3.0
      ay_min: -3.0
      az_max: 3.5
      vx_std: 0.2
      vy_std: 0.2
      wz_std: 0.6
      vx_max: 0.5
      vx_min: -0.35
      vy_max: 0.4
      vy_min: -0.4
      wz_max: 1.5
      iteration_count: 1
      prune_distance: 1.7
      transform_tolerance: 0.1
      temperature: 0.3
      gamma: 0.015
      motion_model: DiffDrive
      visualize: false
      publish_optimal_trajectory: false
      regenerate_noises: true
      TrajectoryVisualizer:
        trajectory_step: 5
        time_step: 5
      AckermannConstraints:
        min_turning_r: 0.05
      critics: [ConstraintCritic, CostCritic, ObstaclesCritic, GoalCritic, GoalAngleCritic, PathAlignCritic,
        PathFollowCritic, PathAngleCritic, PreferForwardCritic]
      ConstraintCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0
      GoalCritic:
        enabled: true
        cost_power: 1
        cost_weight: 6.0
        threshold_to_consider: 0.4
      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 1.2
        threshold_to_consider: 0.15
      PreferForwardCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0
        threshold_to_consider: 1.2
      ObstaclesCritic:
        enabled: true
        cost_power: 1
        repulsion_weight: 3.5
        critical_weight: 7.5
        consider_footprint: false
        collision_cost: 1000000.0
        collision_margin_distance: 0.05
        near_goal_distance: 0.7
        inflation_radius: 0.5
        cost_scaling_factor: 10.0
      CostCritic:
        enabled: false
        cost_power: 1
        cost_weight: 6.0
        near_collision_cost: 250
        critical_cost: 300.0
        consider_footprint: false
        collision_cost: 1000000.0
        near_goal_distance: 0.5
        trajectory_point_step: 3
      PathAlignCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        max_path_occupancy_ratio: 0.05
        trajectory_point_step: 4
        threshold_to_consider: 0.5
        offset_from_furthest: 20
        use_path_orientations: false
      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.4
        offset_from_furthest: 5
        threshold_to_consider: 0.4
      PathAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 1.2
        offset_from_furthest: 5
        threshold_to_consider: 0.5
        max_angle_to_furthest: 1.2
        mode: 0
      # TwirlingCritic:
      #   enabled: true
      #   twirling_cost_power: 1
      #   twirling_cost_weight: 10.0

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 3.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.01
      footprint: '[[<min_x>, <min_y>], [<min_x>, <max_y>], [<max_x>, <max_y>], [<max_x>, <min_y>]]'
      plugins: [voxel_layer, inflation_layer]
      inflation_layer:
        plugin: nav2_costmap_2d::InflationLayer
        cost_scaling_factor: 10.0
        inflation_radius: 0.5
      voxel_layer:
        plugin: nav2_costmap_2d::VoxelLayer
        enabled: true
        publish_voxel_map: true
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /<namespace>/scan_filtered
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          data_type: LaserScan
          raytrace_max_range: 5.0
          raytrace_min_range: 0.0
          obstacle_max_range: 4.5
          obstacle_min_range: 0.0
      always_send_full_costmap: true

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      footprint: '[[<min_x>, <min_y>], [<min_x>, <max_y>], [<max_x>, <max_y>], [<max_x>, <min_y>]]'
      resolution: 0.05
      track_unknown_space: true
      plugins: [static_layer, obstacle_layer, inflation_layer]
      static_layer:
        plugin: nav2_costmap_2d::StaticLayer
        map_subscribe_transient_local: true
      obstacle_layer:
        plugin: nav2_costmap_2d::ObstacleLayer
        observation_sources: scan
        scan:
          topic: /<namespace>/scan_filtered
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          data_type: LaserScan
          raytrace_max_range: 12.0
          raytrace_min_range: 0.0
          obstacle_max_range: 10.0
          obstacle_min_range: 0.0
      inflation_layer:
        plugin: nav2_costmap_2d::InflationLayer
        cost_scaling_factor: 4.0
        inflation_radius: 1.5
      always_send_full_costmap: true

map_saver:
  ros__parameters:
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: true

planner_server:
  ros__parameters:
    expected_planner_frequency: 2.0
    planner_plugins: [GridBased]
    costmap_update_timeout: 1.0
    GridBased:
      plugin: nav2_smac_planner::SmacPlanner2D
      tolerance: 0.25 # tolerance for planning if unable to reach exact pose, in meters
      downsample_costmap: false # whether or not to downsample the map
      downsampling_factor: 1 # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      allow_unknown: true # allow traveling in unknown space
      max_iterations: 500000 # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 500 # maximum number of iterations to attempt to reach goal once in tolerance
      max_planning_time: 3.0 # max time in s for planner to plan, smooth
      cost_travel_multiplier: 2.5 # Cost multiplier to apply to search to steer away from high cost areas. Larger values will place in the center of aisles more exactly (if non-`FREE` cost potential field exists) but take slightly longer to compute. To optimize for speed, a value of 1.0 is reasonable. A reasonable tradeoff value is 2.0. A value of 0.0 effective disables steering away from obstacles and acts like a naive binary search A*.
      use_final_approach_orientation: false # Whether to set the final path pose at the goal's orientation to the requested orientation (false) or in line with the approach angle so the robot doesn't rotate to heading (true)
      smoother:
        max_iterations: 800
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-9

smoother_server:
  ros__parameters:
    smoother_plugins: [simple_smoother]
    simple_smoother:
      plugin: nav2_smoother::SimpleSmoother
      tolerance: 1.0e-9
      max_its: 800
      refinement_num: 2
      enforce_path_inversion: true
      do_refinement: true

behavior_server:
  ros__parameters:
    enable_stamped_cmd_vel: true
    local_costmap_topic: local_costmap/costmap_raw
    global_costmap_topic: global_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: [spin, backup, drive_on_heading, assisted_teleop, wait]
    spin:
      plugin: nav2_behaviors::Spin
    backup:
      plugin: nav2_behaviors::BackUp
      acceleration_limit: 0.5
      deceleration_limit: -0.5
      minimum_speed: 0.10
    drive_on_heading:
      plugin: nav2_behaviors::DriveOnHeading
      acceleration_limit: 0.5
      deceleration_limit: -0.5
      minimum_speed: 0.10
    wait:
      plugin: nav2_behaviors::Wait
    assisted_teleop:
      plugin: nav2_behaviors::AssistedTeleop
    local_frame: odom
    global_frame: map
    robot_base_frame: base_link
    transform_tolerance: 0.1
    simulate_ahead_time: 1.0
    max_rotational_vel: 0.6
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

<namespace>/slam_toolbox:
  ros__parameters:

    # Plugin params
    solver_plugin: solver_plugins::CeresSolver
    ceres_linear_solver: SPARSE_NORMAL_CHOLESKY
    ceres_preconditioner: SCHUR_JACOBI
    ceres_trust_strategy: LEVENBERG_MARQUARDT
    ceres_dogleg_type: TRADITIONAL_DOGLEG
    ceres_loss_function: None

    # ROS Parameters
    odom_frame: odom
    map_frame: map
    base_frame: base_link
    scan_topic: scan_filtered
    use_map_saver: true
    mode: mapping #localization

    # lifelong params
    lifelong_search_use_tree: false
    lifelong_minimum_score: 0.1
    lifelong_iou_match: 0.85
    lifelong_node_removal_score: 0.04
    lifelong_overlap_score_scale: 0.06
    lifelong_constraint_multiplier: 0.08
    lifelong_nearby_penalty: 0.001
    lifelong_candidates_scale: 0.03

    debug_logging: false
    throttle_scans: 1
    transform_publish_period: 0.04
    map_update_interval: 2.0
    resolution: 0.05
    max_laser_range: 12.0 #for rastering images
    minimum_time_interval: 0.5
    transform_timeout: 0.2
    tf_buffer_duration: 10.
    stack_size_to_use: 40000000 #// program needs a larger stack size to serialize large maps

    # General Parameters
    use_scan_matching: true
    use_scan_barycenter: true
    minimum_travel_distance: 0.3
    minimum_travel_heading: 0.4
    scan_buffer_size: 10
    scan_buffer_maximum_scan_distance: 10.0
    link_match_minimum_response_fine: 0.1
    link_scan_maximum_distance: 1.5
    loop_search_maximum_distance: 3.0
    do_loop_closing: true
    loop_match_minimum_chain_size: 10
    loop_match_maximum_variance_coarse: 3.0
    loop_match_minimum_response_coarse: 0.35
    loop_match_minimum_response_fine: 0.45

    # Correlation Parameters - Correlation Parameters
    correlation_search_space_dimension: 0.5
    correlation_search_space_resolution: 0.01
    correlation_search_space_smear_deviation: 0.1

    # Correlation Parameters - Loop Closure Parameters
    loop_search_space_dimension: 8.0
    loop_search_space_resolution: 0.05
    loop_search_space_smear_deviation: 0.03

    # Scan Matcher Parameters
    distance_variance_penalty: 0.5
    angle_variance_penalty: 1.0

    fine_search_angle_offset: 0.00349
    coarse_search_angle_offset: 0.349
    coarse_angle_resolution: 0.0349
    minimum_angle_penalty: 0.9
    minimum_distance_penalty: 0.5
    use_response_expansion: true

waypoint_follower:
  ros__parameters:
    enable_stamped_cmd_vel: true
    loop_rate: 5
    stop_on_failure: false
    action_server_result_timeout: 900.0
    waypoint_task_executor_plugin: wait_at_waypoint
    wait_at_waypoint:
      plugin: nav2_waypoint_follower::WaitAtWaypoint
      enabled: true
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    enable_stamped_cmd_vel: true
    smoothing_frequency: 5.0
    scale_velocities: false
    feedback: CLOSED_LOOP
    max_velocity: [1.0, 1.0, 2.0]
    min_velocity: [-1.0, -1.0, -2.0]
    max_accel: [2.5, 2.5, 3.2]
    max_decel: [-2.5, -2.5, -3.2]
    odom_topic: odometry/filtered
    odom_duration: 0.1
    deadband_velocity: [0.01, 0.01, 0.1] # Measured
    velocity_timeout: 1.0

collision_monitor:
  ros__parameters:
    enable_stamped_cmd_vel: true
    base_frame_id: base_link
    odom_frame_id: odom
    cmd_vel_in_topic: cmd_vel_smoothed
    cmd_vel_out_topic: cmd_vel
    transform_tolerance: 0.1
    source_timeout: 0.5
    stop_pub_timeout: 2.0
    polygons: [SafetySlowdown, CriticalSlowdown]
    FootprintApproach:
      type: polygon
      action_type: approach
      footprint_topic: local_costmap/published_footprint
      time_before_collision: 1.2
      simulation_time_step: 0.1
      min_points: 6
    SafetySlowdown:
      type: polygon
      points: '[[0.6, 0.4], [0.6, -0.4], [-0.1, -0.4], [-0.1, 0.4]]'
      action_type: slowdown
      min_points: 4
      slowdown_ratio: 0.5
      visualize: true
      polygon_pub_topic: safety_slowdown
    CriticalSlowdown:
      type: polygon
      points: '[[0.25, 0.25], [0.25, -0.25], [-0.1, -0.25], [-0.1, 0.25]]'
      action_type: slowdown
      min_points: 2
      slowdown_ratio: 0.85
      visualize: true
      polygon_pub_topic: critical_slowdown
    observation_sources: [scan]
    scan:
      type: scan
      topic: scan_filtered
