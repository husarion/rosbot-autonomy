x-net-config:
  &net-config
  network_mode: host
  ipc: host
  env_file: net.env

x-gpu-config:
  &gpu-config
  runtime: nvidia
  environment:
    - DISPLAY=${DISPLAY:?err}
    - NVIDIA_VISIBLE_DEVICES=all
    - NVIDIA_DRIVER_CAPABILITIES=all

services:

  rviz:
    image: husarion/rviz2:humble
    <<: [ *net-config, *gpu-config ]
    container_name: rviz
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ./config/rosbot.rviz:/root/.rviz2/default.rviz

  rosbot:
    image: husarion/webots:humble
    <<: [ *net-config, *gpu-config ]
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    command: ros2 launch webots_ros2_husarion robot_launch.py robot_name:=rosbot

  slam:
    image: husarion/navigation2:humble
    <<: *net-config
    volumes:
      - ./config/${SLAM_MODE:-slam}_params.yaml:/params.yaml
      - ./maps:/maps
    environment:
      - SLAM_MODE=${SLAM_MODE:-slam}
    command: >
      ros2 launch nav2_bringup ${SLAM_MODE:-slam}_launch.py
        params_file:=/params.yaml
        use_sim_time:=True
        map:=/maps/map.yaml

  navigation:
    image: husarion/navigation2:humble
    <<: *net-config
    depends_on:
      slam: { condition: service_healthy }
    volumes:
      - ./config/nav2_params.yaml:/nav2_params.yaml
    environment:
      - SLAM_MODE=${SLAM_MODE:-slam}
    command: >
      bash -c "
        if [[ \"\$SLAM_MODE\" == \"localization\" ]]; then 
          ros2 launch nav2_bringup navigation_launch.py 
          params_file:=/nav2_params.yaml 
          use_sim_time:=True; 
        fi
      "